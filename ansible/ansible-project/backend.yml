- name: Backend App
  hosts: backend
  become: yes
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks:
    - name: Install curl
      ansible.builtin.apt:
        name:
          - curl
          - unzip
          - python3-pip
        state: present
        update_cache: yes

    - name: Run NodeSource setup script for Node.js 20.x
      ansible.builtin.shell: curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
      args:
        executable: /bin/bash

    - name: Install Node.js 20
      ansible.builtin.apt:
        name: nodejs
        state: latest  

    - name: Adding Application User
      ansible.builtin.user:
        name: expense

    - name: Clean the old Content
      ansible.builtin.file:
        path: /app
        state: absent

    - name: Create App Directory
      ansible.builtin.file:
        path: /app
        state: directory

    - name: Download and Extract App Content
      ansible.builtin.unarchive:
        src: https://expense-artifacts.s3.amazonaws.com/expense-backend-v2.zip
        dest: /app
        remote_src: yes

    - name: Download Node.js Dependencies
      community.general.npm:
        path: /app
        state: latest

    - name: Copy Backend Service file
      ansible.builtin.copy:
        src: backend.service
        dest: /etc/systemd/system/backend.service

    - name: Install MySQL Client
      ansible.builtin.apt:
        name: mysql-client
        state: latest

    - name: Install Python MySQL Client
      ansible.builtin.pip:
        name:
          - PyMySQL
          - cryptography
        executable: pip3

    - name: Load Schema
      community.mysql.mysql_db:
        state: import 
        name: all
        target: /app/schema/backend.sql
        login_user: root
        login_password: ExpenseApp@1
        login_host: 172.31.28.194
      ignore_errors: yes  

    - name: Start Backend Service
      ansible.builtin.systemd:
        name: backend
        state: restarted   
        enabled: yes
        daemon_reload: yes